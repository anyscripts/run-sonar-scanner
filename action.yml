name: Run SonarScanner

inputs:
  SONAR_URL:
    description: 'SonarQube URL'
    required: true

  SONAR_TOKEN:
    description: 'SonarQube TOKEN'
    required: true

  SONAR_QUALITY_GATE:
    description: 'SonarQube Quality Gate'

runs:
  using: 'composite'
  steps:
    - uses: anyscripts/get-sonar-scanner@main
      id: get-sonar-scanner
    - id: check-scanner
      shell: bash
      run: |
        which jq > /dev/null
        if [ $? -ne 0 ]; then
          sudo apt-get install jq -y
        fi
        
        VERSION="${{ steps.get-sonar-scanner.outputs.version }}"
        DOWNLOAD_URL="${{ steps.get-sonar-scanner.outputs.linux }}"
        
        echo "Downloading sonar-scanner v.$VERSION from $DOWNLOAD_URL"
        
        sudo mkdir -p /tools

        if [ -d "/tools/sonar-scanner-$VERSION-linux" ]; then
          echo "sonar-scanner is already installed."
        else
          echo "sonar-scanner is not installed. Downloading and installing..."
          wget "$DOWNLOAD_URL" -P /tmp
          sudo unzip /tmp/sonar-scanner-cli-$VERSION-linux.zip -d /tools/
          /tools/sonar-scanner-$VERSION-linux/bin/sonar-scanner --version
          echo "sonar-scanner is now installed"
        fi
        
        SONAR_SCANNER="/tools/sonar-scanner-$VERSION-linux/bin/sonar-scanner"
        if [[ -z "${{ inputs.SONAR_QUALITY_GATE }}" ]]; then
          QUALITY_GATE="Sonar way"
        fi
        
        REPO_URL=https://github.com/${GITHUB_REPOSITORY}/tree/${GITHUB_REF##*/}
        PROJECT_NAME="${GITHUB_REPOSITORY##*/}"
        BRANCH_NAME="${GITHUB_REF##*/}"
        PROJECT_KEY=$(echo "$GITHUB_REPOSITORY...$BRANCH_NAME" | sed 's/\//_/g')
        
        PROJECT_VERSION="unknown"
        if [ -f "package.json" ]; then
          PROJECT_VERSION=$(jq -r '.version // "0.0.0"' package.json)
        fi
        
        echo "Project:         $PROJECT_NAME@$BRANCH_NAME v.$PROJECT_VERSION..."
        echo "Repo:            $REPO_URL"
        echo "Project key:     $PROJECT_KEY"
        echo "Project version: $PROJECT_VERSION"        
        echo "Quality Gate:    $QUALITY_GATE"

        cd ..
        "$SONAR_SCANNER" \
                  -D sonar.host.url="${{inputs.SONAR_URL}}" \
                  -D sonar.token="${{inputs.SONAR_TOKEN}}" \
                  -D sonar.projectKey="$PROJECT_KEY" \
                  -D sonar.projectName="$PROJECT_NAME ($BRANCH_NAME)" \
                  -D sonar.projectVersion="$PROJECT_VERSION" \
                  -D sonar.qualitygate="$QUALITY_GATE" \
                  -D sonar.analysis.execType="console" \
                  -D sonar.analysis.repo="$PROJECT_NAME" \
                  -D sonar.analysis.repoUrl="$REPO_URL" \
                  -D sonar.analysis.branch="$BRANCH_NAME" \
                  -D sonar.qualitygate.wait=true