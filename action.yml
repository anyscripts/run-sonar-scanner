name: Run SonarScanner

inputs:
  SONAR_URL:
    description: 'SonarQube URL'
    required: true

  SONAR_TOKEN:
    description: 'SonarQube TOKEN'
    required: true

runs:
  using: 'composite'
  steps:
    - uses: anyscripts/get-sonar-scanner@main
      id: get-sonar-scanner
    - id: check-scanner
      shell: bash
      run: |
        which jq > /dev/null
        if [ $? -ne 0 ]; then
          sudo apt-get install jq -y
        fi
        
        VERSION="${{ steps.get-sonar-scanner.outputs.version }}"
        DOWNLOAD_URL="${{ steps.get-sonar-scanner.outputs.linux }}"
        
        echo "Downloading sonar-scanner v.$VERSION from $DOWNLOAD_URL"
        
        sudo mkdir -p /tools

        if [ -d "/tools/sonar-scanner-$VERSION-linux" ]; then
          echo "sonar-scanner is already installed."
        else
          echo "sonar-scanner is not installed. Downloading and installing..."
          wget "$DOWNLOAD_URL" -P /tmp
          sudo unzip /tmp/sonar-scanner-cli-$VERSION-linux.zip -d /tools/
          /tools/sonar-scanner-$VERSION-linux/bin/sonar-scanner --version
          echo "sonar-scanner is now installed"
        fi
        
        PROJECT_NAME="${GITHUB_REPOSITORY##*/}"
        BRANCH_NAME="${GITHUB_REF##*/}"
        PROJECT_KEY="$(Build.Repository.Name)...$BRANCH_NAME"
        
        PROJECT_VERSION="unknown"
        if [ -f "package.json" ]; then
          PROJECT_VERSION=$(jq -r '.version // "0.0.0"' package.json)
        fi
        
        echo "Analyzing $PROJECT_NAME@$BRANCH_NAME v.$PROJECT_VERSION..."
        echo "SonarQube URL: ${{inputs.SONAR_URL}}"
        
        # encode project name
        # ENCODED_NAME=$(urlencode "$PROJECT_NAME ($BRANCH_NAME)")